REQUIRE PLACE  ~mak\place.f 
REQUIRE [IF] ~MAK\CompIF4.f
[IFNDEF] BREAK : BREAK  POSTPONE EXIT POSTPONE THEN ; IMMEDIATE  [THEN]

[IFDEF]  STREAM-FILE
: FROM_SOURCE-ID SOURCE-ID  STREAM-FILE ;
: TO_SOURCE-ID FILE>RSTREAM TO SOURCE-ID ;
[ELSE]
: FROM_SOURCE-ID SOURCE-ID ;
: TO_SOURCE-ID TO SOURCE-ID ;
[THEN]

\- -CELL -1 CELLS CONSTANT -CELL

\- HERE-TAB-CUR VARIABLE HERE-TAB-CUR

\-  SHERE-TAB-CUR VARIABLE SHERE-TAB-CUR

\- H.- : H.-   BASE M@ HEX SWAP U>D (D.) TYPE BASE M! ;
\- U<= : U<= U> 0= ;

CREATE  INPUT_PATH 60 ALLOT
CREATE  OUTPUT_PATH 60 ALLOT

MODULE: AVRLIST

CREATE  FILE_NAME_L 120 ALLOT
CREATE  FILE_NAME_C 120 ALLOT

CREATE   HERE-TAB  4000 CELLS ALLOT
HERE CELL-  CONSTANT HERE-TAB-MAX
HERE-TAB HERE-TAB-CUR !
VARIABLE S_STATE 

: HERE-TAB-CUR+
  HERE-TAB-CUR M@  CELL+ HERE-TAB-MAX UMIN
  HERE-TAB-CUR
 !
 ;

\ 0 VALUE CURFILEHTC

: HERE-TO-TAB-FORCE
 HERE
 HERE-TAB-CUR M@
\ ." |" dup h.
 M!
 HERE-TAB-CUR+
 ;

: HERE-TO-TAB \ F7_ED
\ CURFILEHTC 0= IF CURFILE @ TO CURFILEHTC THEN
\ CURFILE @ CURFILEHTC <> IF BREAK
 HERE-TO-TAB-FORCE
 ;


CREATE   SHERE-TAB  700 CELLS ALLOT
HERE CELL-  CONSTANT SHERE-TAB-MAX
SHERE-TAB SHERE-TAB-CUR !

: SHERE-TAB-CUR+
  SHERE-TAB-CUR M@  CELL+ SHERE-TAB-MAX UMIN
  SHERE-TAB-CUR M! ;


80 VALUE DUMP_MAX 

: AHH.  ( adr u -- adr+ )

   DUP  'FGLOB - 0xFFFF U<
  IF	G_?.NAME>S
  BREAK

	." 0x"
   DUP  'FSTART - 0xFFFFFF U<
  IF	'FSTART - H.- ." +fimg"
  BREAK
  H.-
;

: .LIST ( ADDR  ADDR1 -- ADDR1' ) 
             SWAP
\  cr ." .LIST=" 2dup h. h.
          S_STATE @ \ dup . \ DROP 1
          IF
             BEGIN  2DUP U> 
             WHILE  MINST
             REPEAT  NIP CR
          BREAK

          2DUP U<= if  NIP CR BREAK
\	2DUP - 6 U>
\  	OVER C@ $e8 = AND if MINST THEN  ( call )
\          2DUP = if  NIP CR BREAK

(*
             CR TAB ." .byte 0x"  COUNT  H.-
             BEGIN  2DUP = if  NIP CR BREAK
                DUP 7 AND 
             WHILE   ." ,0x" COUNT H.-			 
             REPEAT
 *)


      2DUP  - 7 U> IF CR TAB ." .quad " DUP @ AHH. CELL+ THEN

             BEGIN  2DUP -  7 U>
             WHILE 
                DUP $3F AND 0=
		IF  CR TAB ." .quad++  "
		ELSE	." ,"
		THEN DUP @  AHH. CELL+
             REPEAT

          2DUP = if  NIP CR BREAK
             CR TAB ." .byte 0x"  COUNT  H.-
             BEGIN  2DUP U> 
             WHILE
                DUP $7 AND 
		IF   ." ,0x"  ELSE  CR TAB ." .byte 0x"
		THEN COUNT H.-			 
             REPEAT
  NIP CR

;

VECT INCLUDED$

' INCLUDED TO INCLUDED$

EXPORT


: STCR_
 ." //"    SOURCE TYPE \ CR
 ; 

VECT STCR
' STCR_ TO STCR

HERE S" _AL" S", VALUE C"_AL"

0 VALUE INCL-HH

\- C/L $101 CONSTANT C/L

[IFNDEF] SOURCE-SAVE

22 CELLS ALLOT HERE VALUE [SS]

: >SS ( n -- )  [SS] CELL- TO  [SS] [SS] ! ;
: SS> (  -- n )  [SS] @  [SS] CELL+ TO  [SS] ;

: SOURCE-SAVE  TIB >SS  #TIB M@ >SS 
    C/L 2 + ALLOCATE THROW TO TIB  ;

: SOURCE-REST
 TIB FREE DROP
 SS> #TIB M! SS> TO TIB  ;



[THEN]

: INCLUDED_AL
 HERE TO INCL-HH
\ F7_ED

   INPUT_PATH COUNT FILE_NAME_S $!
   2DUP FILE_NAME_S $+!

    2DUP 1-  FILE_NAME_L  +PLACE
  C"_AL" COUNT FILE_NAME_L +PLACE  

   ['] <PRE> >BODY @ >R
   ['] HERE-TO-TAB TO <PRE>
\	0 TO CURFILEHTC
     HERE-TAB  HERE-TAB-CUR !
    SHERE-TAB SHERE-TAB-CUR ! 

   FILE_NAME_S COUNT  INCLUDED$ 

  R> TO <PRE>
 -1 SHERE-TAB-CUR M@ M!  SHERE-TAB-CUR+
    HERE-TO-TAB-FORCE
    HERE-TO-TAB-FORCE	-CELL HERE-TAB-CUR M+!
    HERE-TAB-CUR M@ M@	-CELL HERE-TAB-CUR M+!
    BEGIN HERE-TAB-CUR M@ HERE-TAB <>
    WHILE HERE-TAB-CUR M@ M@ UMIN DUP HERE-TAB-CUR M@ M!
          -CELL HERE-TAB-CUR M+!
    REPEAT DROP
    S_STATE 0!
    SHERE-TAB SHERE-TAB-CUR M! 

  FILE_NAME_S COUNT  R/O OPEN-FILE  THROW
  FILE_NAME_L COUNT  W/O CREATE-FILE THROW

  SOURCE-SAVE >IN M@ >R SOURCE-ID >R ( BLK M@ >R) CURSTR M@ >R
  BASE M@ >R HEX
  \ source output
   DUPCOUTSET 
  >R
\+ NOTIV? -1 TO NOTIV?

  TO_SOURCE-ID
  CURSTR 0! HERE-TAB-CUR @ @  
  BEGIN    REFILL 
  WHILE \ [CHAR] * CON_EMIT
        STCR
        BEGIN  SHERE-TAB-CUR M@ M@ HERE-TAB-CUR M@ CELL+ M@ U<
        WHILE  SHERE-TAB-CUR M@ M@  .LIST   SHERE-TAB-CUR+
                 S_STATE @ INVERT S_STATE !
        REPEAT  HERE-TAB-CUR+ HERE-TAB-CUR @ @ .LIST
  REPEAT  DROP  
  FROM_SOURCE-ID
 CLOSE-FILE THROW
  COUTRESTORE
   R> CLOSE-FILE THROW   \ output
  R> BASE M!
  R> CURSTR M! ( R> BLK M!) R> TO SOURCE-ID R> >IN M! SOURCE-REST
 CR FILE_NAME_L COUNT TYPE
 9 EMIT HERE INCL-HH - .

;

: REQUIRED_AL ( waddr wu laddr lu -- )
  2SWAP SFIND
  IF DROP 2DROP EXIT
  ELSE 2DROP INCLUDED_AL THEN
;
: REQUIRE_AL ( "word" "libpath" -- )
  BL PSKIP BL PARSE
  BL PSKIP BL PARSE 2DUP + 0 SWAP C!
  REQUIRED_AL
;
: FLOAD_AL  BL PSKIP BL PARSE INCLUDED_AL ;

: SHERE-TO-TAB DP M@ SHERE-TAB-CUR M@ M! SHERE-TAB-CUR+ ;

;MODULE

\EOF
: : : SHERE-TO-TAB ;

: ; POSTPONE ; SHERE-TO-TAB ; IMMEDIATE

: SSSS
     HERE-TAB  HERE-TAB-CUR !
    SHERE-TAB SHERE-TAB-CUR ! 
;
