.( NC )


: SETX ( x -- )  GETXY NIP SETXY ;

[IFNDEF] MD
\ : MD PARSE-NAME MAKE-DIR ; 
[THEN]

[IFNDEF] RM
\ : RM PARSE-NAME DELETE-FILE ; 
[THEN]

[IFNDEF] FMOVE
(
: FMOVE
 PARSE-NAME 2DUP PARSE-NAME "COPY
 DELETE-FILE ;  )
[THEN]

[IFNDEF] REN
\ : REN  PARSE-NAME PARSE-NAME RENAME-FILE ; 
[THEN]


1 VALUE CUR_NC
0 VALUE BIG_NC

1 VALUE CUR_NC_SAVE
0 VALUE BIG_NC_SAVE

0x1B VALUE NC_COLOR 

0 VALUE NC_X_BASE
0 VALUE NC_Y_BASE
3 VALUE NC_COLS
9 VALUE NC_ROWS
0 VALUE NC_CUR
0 VALUE NC_BASE
12 VALUE NC_NAMESIZE


14 CONSTANT MAXFNM

CREATE COUNT_NAME MAXFNM 1+ ALLOT
CREATE DIR_NAME_S MAXDIR 1+ ALLOT

: |EMITS
 BEGIN DUP GETXY DROP U>
 WHILE OVER EMIT
 REPEAT 2DROP ;

: CRFFNAME.
  FFBLKBUF ff_name ASCIIZ> NC_NAMESIZE UMIN
  DUP >R
 TYPE NC_NAMESIZE R> - SPACES ;

: ||EMITS NC_X_BASE  NC_NAMESIZE 1+ NC_COLS * +   |EMITS ;

0x30 VALUE NCSETCOLOR

: NC_SETNAME

  NC_CUR = 
  DUP IF FFBLKBUF ff_name ASCIIZ>
 DUP 14 U> IF CR ." ZZZ="  2DUP TYPE ABORT THEN
 COUNT_NAME $! THEN
 NCSETCOLOR AND  NC_COLOR  XOR 
  FFBLKBUF ff_attrib W@ FA_DIREC AND IF 0x4 XOR THEN
 COLOR! ;

\  10 TO NC_CUR   1 TO  NC_BASE DIR_DRAW

0 VALUE TST1V
0 VALUE TST2V

: NC_CAP_DRAW
  NC_COLOR COLOR!
  NC_X_BASE
  NC_Y_BASE SETXY
   0xC9 EMIT 	SPACE CUR_DIR@ TYPE  SPACE
\ TST1V .  TST2V . 
 0xCD ||EMITS
;

: EMITBK  >R  GETXY  R> EMIT  SETXY ;

: FRAME_DRAW
  COLOR@ >R
  GETXY 2>R
  NC_CAP_DRAW  0xBB EMITBK
  NC_ROWS 0 DO  CR NC_X_BASE SETX 0xBA EMIT 0xB3 ||EMITS 0xBA EMITBK LOOP
		CR NC_X_BASE SETX 0xC8 EMIT 0xCD ||EMITS 0xBC EMIT
  2R> SETXY
  R>  COLOR!
;

: DIR_DRAW

 NC_CUR NC_COLS NC_ROWS * +
 NC_BASE - NC_ROWS   NC_COLS *  /  1-  NC_ROWS *
 NC_BASE + 0 MAX TO NC_BASE
 NC_CUR    0 MAX TO NC_CUR

 S" *.*" FIRSTFILE

 FFBLKBUF ff_name W@ [CHAR] . =
  IF DROP NEXTFILE THEN

  NC_BASE 0 ?DO DROP NEXTFILE LOOP

    NC_X_BASE 1+ NC_Y_BASE 1+ SETXY

     NC_BASE NC_SETNAME 

	IF    CRFFNAME.
	ELSE NC_NAMESIZE SPACES
	THEN


 NC_COLS NC_ROWS * 1
 DO
	I NC_ROWS /MOD  NC_NAMESIZE 1+ * NC_X_BASE + 1+
		SWAP  NC_Y_BASE + 1+ SETXY 
	NEXTFILE

	I NC_BASE + NC_SETNAME

	IF    CRFFNAME.
	ELSE NC_NAMESIZE SPACES
	THEN
 LOOP

;

: NC_HOME  0 TO NC_CUR 0 TO NC_BASE ;

: DO_NC_0KEY
 KEY
  CASE
	[CHAR] M OF NC_CUR  NC_ROWS + TO NC_CUR   ENDOF  \
	[CHAR] K OF NC_CUR  NC_ROWS - TO NC_CUR   ENDOF  \ left
	[CHAR] P OF NC_CUR  1+ TO NC_CUR
		    NC_CUR  NC_BASE -  NC_COLS NC_ROWS * =
			IF NC_BASE 1+ TO NC_BASE THEN
		 ENDOF
	[CHAR] H OF NC_CUR  NC_BASE - 0=
			IF NC_BASE 1- 0 MAX  TO NC_BASE THEN
			NC_CUR  1- TO NC_CUR
		 ENDOF
	[CHAR] G OF  NC_HOME ENDOF \ HOME
	[CHAR] O OF	 ENDOF \ end

	0x49 OF NC_BASE NC_COLS NC_ROWS * - 0 MAX TO NC_BASE
		NC_CUR NC_COLS NC_ROWS * - 0 MAX TO NC_CUR
	     ENDOF \ PAGE UP
	0x51 OF NC_BASE NC_COLS NC_ROWS * + TO NC_BASE
		NC_CUR	NC_COLS NC_ROWS * + TO NC_CUR
	     ENDOF \ PAGE DOWN
	0x3D OF COUNT_NAME COUNT $VIEW FRAME_DRAW ENDOF \ F3
	0x3E OF COUNT_NAME COUNT $EDIT FRAME_DRAW ENDOF \ F4
 ENDCASE


;

  
:  FMENU
  COLOR@ >R
  GETXY 2>R
	FRAME_DRAW
	BEGIN DIR_DRAW KEY	DUP 0x1B <>
	WHILE
	        CASE
	0	OF DO_NC_0KEY   ENDOF
	0xD	OF COUNT_NAME COUNT CHDIR DROP NC_HOME NC_CAP_DRAW  ENDOF
		ENDCASE

	REPEAT

	DROP
  2R> SETXY
  R>  COLOR!
;


0 VALUE NC_CUR_S
0 VALUE NC_BASE_S
: FMTABDO
	0 TO NCSETCOLOR      DIR_DRAW
	0x30 TO NCSETCOLOR
	NC_CUR_S	NC_CUR
 TO	NC_CUR_S TO	NC_CUR
	NC_BASE_S	NC_BASE
 TO	NC_BASE_S TO	NC_BASE
    DIR_NAME_S COUNT COUNT_NAME $!
	CUR_DIR@
 DUP MAXDIR U> IF CR ." YYY="  2DUP TYPE ABORT THEN
  DIR_NAME_S $!
    COUNT_NAME COUNT CHDIR DROP 
  NC_X_BASE 0x28 XOR TO NC_X_BASE
         FRAME_DRAW
;

: DO_NC_0KEY2_ ( c -- )
  CASE
	[CHAR] M OF NC_CUR  NC_ROWS + TO NC_CUR   ENDOF  \
	[CHAR] K OF NC_CUR  NC_ROWS - TO NC_CUR   ENDOF  \ left
	[CHAR] P OF NC_CUR  1+ TO NC_CUR
		    NC_CUR  NC_BASE -  NC_COLS NC_ROWS * =
			IF NC_BASE 1+ TO NC_BASE THEN
		 ENDOF
	[CHAR] H OF NC_CUR  NC_BASE - 0=
			IF NC_BASE 1- 0 MAX  TO NC_BASE THEN
			NC_CUR  1- TO NC_CUR
		 ENDOF
	[CHAR] G OF  NC_HOME ENDOF \ HOME
	[CHAR] O OF	 ENDOF \ end

	0x49 OF NC_BASE NC_COLS NC_ROWS * - 0 MAX TO NC_BASE
		NC_CUR NC_COLS NC_ROWS * - 0 MAX TO NC_CUR
	     ENDOF \ PAGE UP
	0x51 OF NC_BASE NC_COLS NC_ROWS * + TO NC_BASE
		NC_CUR	NC_COLS NC_ROWS * + TO NC_CUR
	     ENDOF \ PAGE DOWN
	0x3D OF COUNT_NAME COUNT $VIEW FMTABDO FMTABDO ENDOF \ F3
	0x3E OF COUNT_NAME COUNT $EDIT FMTABDO FMTABDO ENDOF \ F4
 ENDCASE

;

: DO_NC_0KEY2
 KEY  DO_NC_0KEY2_ ;


:  FM2
  COLOR@ >R
  GETXY 2>R
   FMTABDO FMTABDO
	BEGIN DIR_DRAW KEY	DUP 0x1B <>
	WHILE
	        CASE
	0	OF DO_NC_0KEY2   ENDOF
	9	OF  FMTABDO  ENDOF  \ tab
	0xD	OF COUNT_NAME COUNT CHDIR DROP NC_HOME NC_CAP_DRAW FMTABDO FMTABDO  ENDOF
		ENDCASE

	REPEAT

	DROP
  2R> SETXY
  R>  COLOR!
;



: NCDO1B

 0xFF AND \  KEY
  CASE

	0x44	OF  S"  0 TO NCACCEPT?" ACC_TYPE ENDOF \ F10
	0x3F OF  S"  FCOPY  " ACC_TYPE  COUNT_NAME COUNT	ACC_TYPE
	S"    " ACC_TYPE 
  CUR_DIR@ ACC_TYPE S" \" ACC_TYPE  COUNT_NAME COUNT	ACC_TYPE
  ENDOF \ F5

	0x9B OF ACC_LEFT  ENDOF
	0x9D OF  GETXY SWAP 1+ SWAP SETXY 1+ ENDOF
	0x98 OF -1 COUNT_STP +! GET_LAST_STP    ENDOF
	0xA0 OF  1 COUNT_STP +! GET_LAST_STP    ENDOF

(
	0x8B OF ACC_LEFT  ENDOF
	0x8D OF  GETXY SWAP 1+ SWAP SETXY 1+ ENDOF
	0x88 OF -1 COUNT_STP +! GET_LAST_STP    ENDOF
	0x90 OF  1 COUNT_STP +! GET_LAST_STP    ENDOF
)
	[CHAR] R OF  \ imsert 
			ID_SHIFT@
			IF CLIPBOARD? IF CLIPBOARD@ 20 MIN ACC_TYPE THEN THEN
		 ENDOF

  COLOR@ >R
  GETXY 2>R	DO_NC_0KEY2_
  2R> SETXY
  R>  COLOR! 0

 ENDCASE ;

0 VALUE NCACCEPT?

: NCDIR_DRAW
  COLOR@ >R
  GETXY 2>R

  DIR_DRAW

  2R> SETXY
  R>  COLOR!
;

: NCACCEPT_ ( c-ar +n1 -- c-addr EA A )
	COLS 1- UMIN
   2DUP BLANK
   OVER + 1- OVER      \ SA EA A
   BEGIN NCDIR_DRAW  GKEY          \ SA EA A C
\     DUP 0xA = OVER 0xD = OR 0= 
 CASE
	DUP 0x100 AND	IF  NCDO1B   ENDOF
	8	OF ACC_LEFT ACC_DELETE ENDOF
	5 OF -1 COUNT_STP +! GET_LAST_STP    ENDOF  \ ctr-e
	0x18 OF  1 COUNT_STP +! GET_LAST_STP    ENDOF   \ ctr-x
	0x1B OF  S"  0 TO NCACCEPT?" ACC_TYPE ENDOF \ esc
	9	OF
  COLOR@ >R  GETXY 2>R  FMTABDO
  2R> SETXY  R>  COLOR!
  ENDOF
	0xF	OF  S" FMENU" ACC_TYPE ENDOF \ Ctr-O
	0xA	OF  COUNT_NAME COUNT ACC_TYPE ENDOF \ Ctr-O
	0xD	OF   >R OVER R>  TUCK U< IF BREAK
			COUNT_NAME COUNT CHDIR
	IF \	COUNT_NAME COUNT ACC_TYPE
	ELSE	COLOR@ >R  GETXY 2>R NC_HOME NC_CAP_DRAW FMTABDO FMTABDO			
		2R> SETXY  R>  COLOR!
	THEN
		ENDOF

               ACC_EMIT
              0 ENDCASE  OVER UMIN \ SA EA A
   AGAIN
;
  

: NCACCEPT ( c-addr +n1 -- +n2 ) \ 94
  COLOR@ >R
  GETXY 2>R
   FMTABDO FMTABDO

  2R> SETXY
  R>  COLOR!

  NCACCEPT_
  ACC_END NIP
  OVER - DUP IF 2DUP
\ DUP 14 U> IF CR ." LLL="  2DUP TYPE ABORT THEN

  LAST_STP $!  1 COUNT_STP +! THEN
  NIP CR
;

: NC
  TIB >R >IN @ >R #TIB @ >R SOURCE-ID >R CURSTR @ >R
  C/L 2 + ALLOCATE THROW TO TIB

  -1 TO NCACCEPT?
  BEGIN  NCACCEPT?
  WHILE  TIB 80 NCACCEPT #TIB ! >IN 0! 
 CR ." <" SOURCE TYPE ." >" CR
    ['] INTERPRET CATCH
    ?DUP
    IF ['] ERROR CATCH THROW
	    S0 @ SP! \ R0 @ RP!
    ELSE OK.
    THEN

  REPEAT

  R> CURSTR ! R> TO SOURCE-ID R> #TIB ! R> >IN ! R> TO TIB

;
