.( NC )

REQUIRE CASE ~mak\case.f 

\- SETX  : SETX ( x -- )  GETXY NIP SETXY ;

[IFNDEF] MD
\+ MAKE-DIR : MD PARSE-NAME MAKE-DIR ; 
[THEN]

[IFNDEF] RM
\+ DELETE-FILE : RM PARSE-NAME DELETE-FILE ; 
[THEN]

[IFNDEF] FMOVE
\ + DELETE-FILE : FMOVE PARSE-NAME 2DUP PARSE-NAME COPY_FILE DELETE-FILE ;  
[THEN]

[IFNDEF] REN
\+ RENAME-FILE : REN  PARSE-NAME PARSE-NAME RENAME-FILE ; 
[THEN]

\- CUR_DIR@ : CUR_DIR@  CUR_DIR	COUNT ;

\ + NCFFFF NCFFFF
\ MARKER  NCFFFF

1 VALUE CUR_NC
0 VALUE BIG_NC

1 VALUE CUR_NC_SAVE
0 VALUE BIG_NC_SAVE

0x1B VALUE NC_COLOR 

0 VALUE NC_X_BASE
2 VALUE NC_Y_BASE
3 VALUE NC_COLS
9 VALUE NC_ROWS
0 VALUE NC_CUR
0 VALUE NC_BASE
12 VALUE NC_NAMESIZE

: NCMOD3
3 TO NC_COLS
12 TO NC_NAMESIZE ;

: NCMOD2
2 TO NC_COLS
18 TO NC_NAMESIZE ;

: NCMOD1
1 TO NC_COLS
38 TO NC_NAMESIZE ;

\ 14 CONSTANT MAXFNM
55 CONSTANT MAXFNM

VARIABLE COUNT_NAME MAXFNM 1+ DALLOT
\ CREATE COUNT_NAME_S MAXFNM 1+ ALLOT

\- MAXDIR 0x101 CONSTANT MAXDIR
VARIABLE DIR_NAME_S MAXDIR 1+ DALLOT
DIR_NAME_S 0!

: |EMITS
 BEGIN DUP GETXY DROP U>
 WHILE OVER EMIT
 REPEAT 2DROP ;

: CRFFNAME.
  GET-DIR-FILE-NAME NC_NAMESIZE UMIN
  DUP >R
 TYPE NC_NAMESIZE R> - SPACES ;

: ||EMITS NC_X_BASE  NC_NAMESIZE 1+ NC_COLS * +   |EMITS ;

0x30 VALUE NCSETCOLOR

0 VALUE ?COUNT_DIR

: NC_SETNAME  ( n -- )

  NC_CUR = 
  DUP IF GET-DIR-FILE-NAME
 DUP MAXFNM U> IF CR ." ZZZ="  2DUP TYPE CO KEY DROP ABORT THEN
 COUNT_NAME $!
\+ isdir GET-DIR-ATTR isdir AND
\+ FA_DIREC FFBLKBUF ff_attrib W@ FA_DIREC AND


 TO ?COUNT_DIR
 THEN
 NCSETCOLOR AND  NC_COLOR  XOR 
\+ isdir GET-DIR-ATTR isdir AND
\+ FA_DIREC FFBLKBUF ff_attrib W@ FA_DIREC AND
  IF 0x4 XOR THEN
 COLOR! ;

\  10 TO NC_CUR   1 TO  NC_BASE DIR_DRAW
0 VALUE TST1V
0 VALUE TST2V

: NC_CAP_DRAW
  NC_COLOR COLOR!
  NC_X_BASE
  NC_Y_BASE SETXY
   0xC9 EMIT \	SPACE
 CUR_DIR@ MAXCURX 2/ 2- UMIN TYPE \ SPACE
\ TST1V .  TST2V . 
 0xCD ||EMITS
;

: EMITBK  >R  GETXY  R> EMIT  SETXY ;

: FRAME_DRAW
  COLOR@ >R
  GETXY 2>R
  NC_CAP_DRAW  0xBB EMITBK
  NC_ROWS 0 DO  CR NC_X_BASE SETX 0xBA EMIT 0xB3 ||EMITS 0xBA EMITBK LOOP
		CR NC_X_BASE SETX 0xC8 EMIT 0xCD ||EMITS 0xBC EMIT
  2R> SETXY
  R>  COLOR!
;

: DIR_DRAW

 NC_CUR NC_COLS NC_ROWS * +
 NC_BASE - NC_ROWS   NC_COLS *  /  1-  NC_ROWS *
 NC_BASE + 0 MAX TO NC_BASE
 NC_CUR    0 MAX TO NC_CUR

\ DIR_NAME_S COUNT
\ TRGO TRACE
[IFDEF] ABS_DIR_EMPTY?
 S" " ['] ABS_DIR_EMPTY? CATCH
 IF  S" G:" "CD  2DROP S" " ['] ABS_DIR_EMPTY? CATCH
   IF  S" J:" "CD  2DROP  S" " ABS_DIR_EMPTY? THEN
 THEN
 0=
 GET-DIR-FILE-NAME S" ." COMPARE  0=
[ELSE]
 S" *.*" FIRSTFILE

 FFBLKBUF ff_name W@ [CHAR] . =
[THEN]
  IF DROP NEXTFILE THEN

  NC_BASE 0 ?DO DROP NEXTFILE LOOP

    NC_X_BASE 1+ NC_Y_BASE 1+ SETXY

     NC_BASE NC_SETNAME 

	IF     CRFFNAME.
	ELSE  NC_NAMESIZE SPACES
	THEN


 NC_COLS NC_ROWS * 1
 DO
\	?REAL
\	IF
		I NC_ROWS /MOD  NC_NAMESIZE 1+ * NC_X_BASE + 1+
			SWAP  NC_Y_BASE + 1+ SETXY 
\	THEN
	NEXTFILE

	I NC_BASE + NC_SETNAME

	IF     CRFFNAME.
	ELSE  NC_NAMESIZE SPACES
	THEN
 LOOP

;

: NC_HOME  0 TO NC_CUR 0 TO NC_BASE ;

\- "CD : "CD CHDIR DROP ;

0 VALUE NC_CUR_S
0 VALUE NC_BASE_S
: FMTABDO
	0 TO NCSETCOLOR      DIR_DRAW
	0x30 TO NCSETCOLOR
	NC_CUR_S	NC_CUR
 TO	NC_CUR_S TO	NC_CUR
	NC_BASE_S	NC_BASE
 TO	NC_BASE_S TO	NC_BASE
\	COUNT_NAME COUNT COUNT_NAME_S $!
    DIR_NAME_S COUNT COUNT_NAME $!
	CUR_DIR@
 DUP MAXDIR U> IF CR ." YYY="  2DUP TYPE ABORT THEN
  DIR_NAME_S $!
    COUNT_NAME COUNT "CD
  NC_X_BASE 0x28 XOR TO NC_X_BASE
         FRAME_DRAW
;

: NCDIR_DRAW
 2>R >R
 GETXY 2>R
 0 0 SETXY $50  SPACES $50  SPACES
 0 0 SETXY
  STATUS.
 2R> SETXY
 R> 2R> 

  COLOR@ >R
  GETXY 2>R

  DIR_DRAW

\  2>R >R \ 
\  CURX 0! CURY 1+!  STATUS.
\  R> 2R>

  2R> SETXY
  R>  COLOR!
;

\- $VIEW	VECT $VIEW ' 2DROP TO $VIEW
\- $EDIT	VECT $EDIT ' 2DROP TO $EDIT

: DO_NC_0KEY2_ ( c -- )
  CASE
	[CHAR] M OF NC_CUR  NC_ROWS + TO NC_CUR   ENDOF  \
	[CHAR] K OF NC_CUR  NC_ROWS - TO NC_CUR   ENDOF  \ left
	[CHAR] P OF NC_CUR  1+ TO NC_CUR
		    NC_CUR  NC_BASE -  NC_COLS NC_ROWS * =
			IF NC_BASE 1+ TO NC_BASE THEN
		 ENDOF
	[CHAR] H OF NC_CUR  NC_BASE - 0=
			IF NC_BASE 1- 0 MAX  TO NC_BASE THEN
			NC_CUR  1- TO NC_CUR
		 ENDOF
	[CHAR] G OF  NC_HOME ENDOF \ HOME
	[CHAR] O OF	 ENDOF \ end
	'R' OF CURSOR% @ 5 U< VSHRIFT@ AND 3 OR CURSOR% !  ENDOF \ Ins

	0x49 OF NC_BASE NC_COLS NC_ROWS * - 0 MAX TO NC_BASE
		NC_CUR NC_COLS NC_ROWS * - 0 MAX TO NC_CUR
	     ENDOF \ PAGE UP
	0x51 OF NC_BASE NC_COLS NC_ROWS * + TO NC_BASE
		NC_CUR	NC_COLS NC_ROWS * + TO NC_CUR
	     ENDOF \ PAGE DOWN
\+ $VIEW	0x3D OF >R 2>R COUNT_NAME COUNT $VIEW	2R> R> FMTABDO FMTABDO ENDOF \ F3
\+ $EDIT	0x3E OF >R 2>R COUNT_NAME COUNT $EDIT	2R> R> FMTABDO FMTABDO ENDOF \ F4
 ENDCASE

;

: GEN_2PARAM
	ACC_TYPE
	BL  ACC_EMIT
	COUNT_NAME COUNT ACC_TYPE
	BL  ACC_EMIT
	DIR_NAME_S	COUNT ACC_TYPE
	S" \"  ACC_TYPE
	COUNT_NAME COUNT ACC_TYPE
;

: GEN_1PARAM  ACC_TYPE
	BL  ACC_EMIT
	COUNT_NAME COUNT ACC_TYPE
;

\- FCOPY \+ COPY : FCOPY COPY ;

: ACC_DELETE1 ( ADDR ADDR1 -- ADDR ADDR1 )
  2DUP U> 0= IF BREAK
   GETXY 2>R
  2DUP - >R DUP 1+ OVER R@ MOVE
   DUP R>
\   GETXY 2>R
\ 1 1 SETXY DUP . 2DUP TYPE ." $"
\  2R> SETXY
 TYPE 2 EMIT 4 EMIT
  2R> SETXY
;

: NCDO1B

 0xFF AND \  KEY
  CASE

	0x44 OF ( S"  0 TO NCACCEPT?" ACC_TYPE) ENDOF \ F10
	0x3F OF
		?COUNT_DIR
		IF	S"  DIRCP " ACC_TYPE
			COUNT_NAME COUNT ACC_TYPE
			BL  ACC_EMIT
			DIR_NAME_S COUNT ACC_TYPE
			S" \"  ACC_TYPE
		ELSE  S"  FCOPY" GEN_2PARAM 
		THEN ENDOF \ F5
	0x42 OF  S"  RM" GEN_1PARAM  ENDOF \ F8
	0x1C OF  COUNT_NAME COUNT ACC_TYPE ENDOF \ Alt-Ener

	0x9B OF ACC_LEFT  ENDOF
	0x9D OF  GETXY SWAP 1+ SWAP SETXY 1+ ENDOF
	0x98 OF -1 COUNT_STP +! GET_LAST_STP    ENDOF
	0x80 OF  1 COUNT_STP +! GET_LAST_STP    ENDOF
	$82  OF ACC_HOME ENDOF
	[CHAR] S OF  ACC_DELETE ENDOF
	'R' OF CURSOR% @ 5 U< VSHRIFT@ AND 3 OR CURSOR% !  ENDOF \ Ins
	$92 OF          \  CTRL INS
[IFDEF] CLIPBOARD!
 2 PICK \ SA EA A SA
 2DUP - \ SA EA A SA A-SA 
 CLIPBOARD!
[THEN]
  ENDOF

	[CHAR] R OF  \ imsert 
\+ CLIPBOARD?			ID_SHIFT@
\+ CLIPBOARD?			IF CLIPBOARD? IF CLIPBOARD@ ( 80 MIN ) ACC_TYPE THEN THEN
		 ENDOF
	0xFE OF >R 2>R S" REE" EVALUATE		2R> R> FMTABDO FMTABDO ENDOF \ Ctl F4

  COLOR@ >R
  GETXY 2>R	DO_NC_0KEY2_
  2R> SETXY
  R>  COLOR! 0

 ENDCASE ;

0 VALUE NCACCEPT?

\- GKEY : GKEY KEY ;

VECT NCACCEPT_STEP

\ 0 VALUE 'CO_NCACCEPT_STEP
0 VALUE 'NC_NCACCEPT_STEP

0 VALUE 'NCACCEPT0
0 VALUE 'NCACCEPT
\- NCACCEPT VECT NCACCEPT

: COACCEPT0 ( c-addr +n1 -- +n2 ) \ 94
 GETXY 2>R
 2>R  
 0 0 SETXY  STATUS.
 2R>  \ c-addr +n1
 2R> SETXY

   MAXCURX 1- UMIN
   2DUP BLANK
   OVER + 1- OVER      \ SA EA A
   BEGIN   GKEY          \ SA EA A C
\     DUP 0xA = OVER 0xD = OR 0= 
 NCACCEPT_STEP
   UNTIL

  ACC_END NIP
  OVER - DUP IF 2DUP

  LAST_STP $!  1 COUNT_STP +! THEN
  NIP CR
;

: NCDDDD
  COLOR@ >R
  GETXY 2>R
   FMTABDO FMTABDO

  2R>  SETXY
  R>  COLOR! ;

: CO_NCACCEPT_STEP   ( -- flg )
        CASE
        DUP 0x100 AND   IF DO1B   ENDOF
        8       OF ACC_LEFT ACC_DELETE ENDOF
	$13	OF 2>R >R STS. R> 2R> ENDOF

\       0xF     OF  S" FMENU" ACC_TYPE ENDOF \ Ctr-O
        0xF     OF  'NC_NCACCEPT_STEP TO NCACCEPT_STEP
 NCDDDD NCDIR_DRAW
                'NCACCEPT0 TO NCACCEPT
 ENDOF \ Ctr-O
        0xD     OF -1 EXIT ENDOF
		CURSOR% @ 5 U>	IF >R ACC_DELETE1 R> THEN
               ACC_EMIT
              0 ENDCASE  OVER UMIN \ SA EA A
 0
;

: NC_NCACCEPT_STEP ( -- flg )
 CASE
	DUP 0x100 AND	IF  NCDO1B NCDIR_DRAW  ENDOF
	8	OF ACC_LEFT ACC_DELETE ENDOF
	$13	OF 2>R >R STS. R> 2R> ENDOF
	5 OF -1 COUNT_STP +! GET_LAST_STP    ENDOF  \ ctr-e
	0x18 OF  1 COUNT_STP +! GET_LAST_STP    ENDOF   \ ctr-x
	0x1B OF ( S"  0 TO NCACCEPT?" ACC_TYPE) ENDOF \ esc
        0xF  OF  ['] CO_NCACCEPT_STEP TO NCACCEPT_STEP
                ['] COACCEPT0 TO NCACCEPT  ENDOF \ Ctr-O

        0x15  OF
  NC_X_BASE 0x28 XOR TO NC_X_BASE  COLOR@ >R  GETXY 2>R
 FMTABDO FMTABDO   DIR_DRAW	2R> SETXY  R>  COLOR!  ENDOF \ Ctr-U

	6	OF	CUR_DIR@  ACC_TYPE '\' ACC_EMIT
			COUNT_NAME COUNT ACC_TYPE ENDOF \ Ctr-F
	9	OF
  COLOR@ >R  GETXY 2>R  FMTABDO DIR_DRAW
  2R> NC_ROWS 2+ UMAX SETXY  R>  COLOR!  ENDOF  \ tab
	0xA	OF  COUNT_NAME COUNT ACC_TYPE ENDOF \ Ctr-Enter
	0xD	OF   >R OVER R>  TUCK U< IF -1 BREAK
		  ?COUNT_DIR
		  IF	COUNT_NAME COUNT "CD
		COLOR@ >R  GETXY 2>R NC_HOME NC_CAP_DRAW NCDIR_DRAW
		2R> SETXY  R>  COLOR!
		  THEN
		ENDOF
		CURSOR% @ 5 U>	IF >R ACC_DELETE1 R> THEN
               ACC_EMIT
              0 ENDCASE  OVER UMIN \ SA EA A
             0
;
' NC_NCACCEPT_STEP TO 'NC_NCACCEPT_STEP
'NC_NCACCEPT_STEP TO NCACCEPT_STEP


: NCACCEPT0 ( c-addr +n1 -- +n2 ) \ 94
  NCDDDD

   MAXCURX 1- UMIN
   2DUP BLANK
   OVER + 1- OVER      \ SA EA A
  NCDIR_DRAW
   BEGIN   GKEY          \ SA EA A C
\     DUP 0xA = OVER 0xD = OR 0= 
 NCACCEPT_STEP
   UNTIL

  ACC_END NIP
  OVER - DUP IF 2DUP

  LAST_STP $!  1 COUNT_STP +! THEN
  NIP CR
;

' NCACCEPT0 TO 'NCACCEPT0
' NCACCEPT0 TO NCACCEPT

: NC \ TOGGG
 ['] NCACCEPT TO ACCEPT
 GETXY   NC_ROWS 2 + MAX
 SETXY
 ;

[IFDEF] &START_INIT
: ?NC_SET_INIT
 ." <?NC_SET_INIT"
 [ &START_INIT @ COMPILE, ]
\ G:  S" G:"  DIR_NAME_S $!
 ." ?NC_SET_INIT>" CR
 ;

' ?NC_SET_INIT &START_INIT !

[THEN]

\ 1010 1101