
: [TTERR]
  >R
  OVER = IF  DROP R> COUNT TYPE RDROP BREAK
  RDROP ;

: EFI_ERRORS>
   ['] (C") COMPILE, 0 PARSE S",
   POSTPONE [TTERR] ; IMMEDIATE

: EFI_ERRORS.  ( u -- ) 
   $FF AND   ." EFI " 
1  EFI_ERRORS> LOAD_ERROR                  
2  EFI_ERRORS> INVALID_PARAMETER           
3  EFI_ERRORS> UNSUPPORTED                 
4  EFI_ERRORS> BAD_BUFFER_SIZE             
5  EFI_ERRORS> BUFFER_TOO_SMALL            
6  EFI_ERRORS> NOT_READY                   
7  EFI_ERRORS> DEVICE_ERROR                
8  EFI_ERRORS> WRITE_PROTECTED             
9  EFI_ERRORS> OUT_OF_RESOURCES            
10 EFI_ERRORS> VOLUME_CORRUPTED            
11 EFI_ERRORS> VOLUME_FULL                 
12 EFI_ERRORS> NO_MEDIA                    
13 EFI_ERRORS> MEDIA_CHANGED               
14 EFI_ERRORS> NOT_FOUND F                  
15 EFI_ERRORS> ACCESS_DENIED               
16 EFI_ERRORS> NO_RESPONSE                 
17 EFI_ERRORS> NO_MAPPING                  
18 EFI_ERRORS> TIMEOUT                     
19 EFI_ERRORS> NOT_STARTED                 
20 EFI_ERRORS> ALREADY_STARTED             
21 EFI_ERRORS> ABORTED                     
22 EFI_ERRORS> ICMP_ERROR                  
23 EFI_ERRORS> TFTP_ERROR                  
24 EFI_ERRORS> PROTOCOL_ERROR              
25 EFI_ERRORS> INCOMPATIBLE_VERSION        
26 EFI_ERRORS> SECURITY_VIOLATION          
27 EFI_ERRORS> CRC_ERROR                   
28 EFI_ERRORS> END_OF_MEDIA                
31 EFI_ERRORS> END_OF_FILE                 
32 EFI_ERRORS> INVALID_LANGUAGE            
33 EFI_ERRORS> COMPROMISED_DATA            
34 EFI_ERRORS> IP_ADDRESS_CONFLICT         
35 EFI_ERRORS> HTTP_ERROR                  
 DROP
;

:NONAME
 DUP  $30 >> $8000 =
 IF EFI_ERRORS. BREAK
  	CR ." ERR=" . 
; ->DEFER ERROR_.

: EFI_ERROR_DO

	DUP 0= IF DROP BREAK	
	SAVEERR
	COLOR@ >R
	EFI_RED COLOR! 
	CR ERRTIB COUNT TYPE CR
	ERRTIB 1+ ER>IN @ $3F AND 0
   ?DO COUNT 9 = IF 9 EMIT ELSE SPACE THEN  LOOP DROP
 ." ^" \ DROP

	ERROR_.

	R> COLOR!
	CR  SP0 @ SP!   STATE 0!
;

' EFI_ERROR_DO TO ERROR_DO
